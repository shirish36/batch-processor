name: 'Deploy Batch Processor to Cloud Run Job'

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID || 'your-gcp-project' }}
  REGION: us-central1
  JOB_NAME: batch-processor-${{ github.event.inputs.environment || 'dev' }}
  REGISTRY: trial4jlj6w.jfrog.io/shirish-docker-docker
  IMAGE_NAME: batch-processor

jobs:
  test:
    name: 'Run Tests'
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v4
      
    - name: 'Setup .NET'
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: 'Restore dependencies'
      run: dotnet restore
      
    - name: 'Build application'
      run: dotnet build --no-restore --configuration Release
      
    - name: 'Run unit tests'
      run: dotnet test --no-build --configuration Release --verbosity normal

  security-scan:
    name: 'Security Scan'
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v4
      
    - name: 'Build Docker image for scanning'
      run: docker build -t scan-image:latest .
        
    - name: 'Run Trivy vulnerability scanner'
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'scan-image:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'

  build-and-deploy:
    name: 'Build and Deploy'
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    permissions:
      contents: read
      id-token: write
      
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v4
        
    - name: 'Login to JFrog Artifactory'
      run: |
        echo "${{ secrets.JFROG_TOKEN }}" | docker login trial4jlj6w.jfrog.io -u shirishrane26@gmail.com --password-stdin
        
    - name: 'Build and tag Docker image'
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest .
        
        ENV_TAG="${{ github.event.inputs.environment || 'dev' }}"
        docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${ENV_TAG}
        
    - name: 'Push Docker image to JFrog'
      run: |
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        
        ENV_TAG="${{ github.event.inputs.environment || 'dev' }}"
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${ENV_TAG}
        
    - name: 'Authenticate to Google Cloud'
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: 'Setup Google Cloud SDK'
      uses: google-github-actions/setup-gcloud@v2
      
    - name: 'Deploy to Cloud Run Job'
      run: |
        ENV_TAG="${{ github.event.inputs.environment || 'dev' }}"
        
        gcloud run jobs replace --source . \
          --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${ENV_TAG} \
          --job ${{ env.JOB_NAME }} \
          --region ${{ env.REGION }} \
          --max-retries 3 \
          --parallelism 1 \
          --task-count 1 \
          --cpu 1 \
          --memory 1Gi \
          --task-timeout 3600 \
          --set-env-vars="ENVIRONMENT=${ENV_TAG}" \
          --set-env-vars="VERSION=${{ github.sha }}" \
          --service-account="${{ env.JOB_NAME }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com" \
          --quiet
          
    - name: 'Test job execution'
      run: |
        echo "Testing batch processor job execution..."
        gcloud run jobs execute ${{ env.JOB_NAME }} --region ${{ env.REGION }} --wait
        
    - name: 'Deployment summary'
      run: |
        echo "##  Batch Processor Deployment Successful!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Job:** ${{ env.JOB_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "**Environment:** ${{ github.event.inputs.environment || 'dev' }}" >> $GITHUB_STEP_SUMMARY
        echo "**Region:** ${{ env.REGION }}" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
